# Ninja file generated by bang (https://github.com/cdsoft/bang)
# bang build.lua -o build.ninja

ninja_required_version = 1.11.1

builddir = .build
minitar = $builddir/minitar

rule luax-native
  description = luax-native $out
  command = luax compile -t native $in -o $out

build $minitar: luax-native minitar.lua

######################################################################
# Test data generation
######################################################################

input = $builddir/input
date = 222201011111.00

rule sh
  command = ./$in $args > $out

build $builddir/step_0-generate_input: sh gen_test.sh
  args = $input $date

######################################################################
# Archive creation
######################################################################

rule create
  command = $minitar -cf $out $args

rule test
  command = $minitar -tf $in $args > $out

rule tartest
  command = tar -tvf $in $args > $out

rule extract
  command = mkdir -p $out.dir && $minitar -xvf $in $args -C $out.dir > $out

build $builddir/step_1-creation.tar: create | $minitar $builddir/step_0-generate_input
  args = $input --strip 1
build $builddir/step_1-creation.test: test $builddir/step_1-creation.tar
build $builddir/step_1-creation.tartest: tartest $builddir/step_1-creation.tar
build $builddir/step_1-creation.extract: extract $builddir/step_1-creation.tar
build $builddir/step_2-creation.tar.lz: create | $minitar $builddir/step_0-generate_input
  args = $input --strip 1
build $builddir/step_2-creation.test: test $builddir/step_2-creation.tar.lz
build $builddir/step_2-creation.tartest: tartest $builddir/step_2-creation.tar.lz
build $builddir/step_2-creation.extract: extract $builddir/step_2-creation.tar.lz
build $builddir/step_3-creation.tar.lz: create | $minitar $builddir/step_0-generate_input
  args = . -C $input
build $builddir/step_3-creation.test: test $builddir/step_3-creation.tar.lz
build $builddir/step_3-creation.tartest: tartest $builddir/step_3-creation.tar.lz
build $builddir/step_3-creation.extract: extract $builddir/step_3-creation.tar.lz
build $builddir/step_4-creation.tar.lz: create | $minitar $builddir/step_0-generate_input
  args = $input --strip 2
build $builddir/step_4-creation.test: test $builddir/step_4-creation.tar.lz
build $builddir/step_4-creation.tartest: tartest $builddir/step_4-creation.tar.lz
build $builddir/step_4-creation.extract: extract $builddir/step_4-creation.tar.lz
build $builddir/step_5-creation.tar.lz: create | $minitar $builddir/step_0-generate_input
  args = $input --strip 1 --add /foo/bar/
build $builddir/step_5-creation.test: test $builddir/step_5-creation.tar.lz
build $builddir/step_5-creation.tartest: tartest $builddir/step_5-creation.tar.lz
build $builddir/step_5-creation.extract: extract $builddir/step_5-creation.tar.lz
build $builddir/step_6-creation.tar.lz: create | $minitar $builddir/step_0-generate_input
  args = . -C $input --add /foo/bar/
build $builddir/step_6-creation.test: test $builddir/step_6-creation.tar.lz
build $builddir/step_6-creation.tartest: tartest $builddir/step_6-creation.tar.lz
build $builddir/step_6-creation.extract: extract $builddir/step_6-creation.tar.lz
build $builddir/step_7-creation.tar.lz: create | $minitar $builddir/step_0-generate_input
  args = $input --strip 2 --add /foo/bar/
build $builddir/step_7-creation.test: test $builddir/step_7-creation.tar.lz
build $builddir/step_7-creation.tartest: tartest $builddir/step_7-creation.tar.lz
build $builddir/step_7-creation.extract: extract $builddir/step_7-creation.tar.lz
build $builddir/step_8-creation.tar.gz: create | $minitar $builddir/step_0-generate_input
  args = $input --strip 1
build $builddir/step_8-creation.test: test $builddir/step_8-creation.tar.gz
build $builddir/step_8-creation.tartest: tartest $builddir/step_8-creation.tar.gz
build $builddir/step_8-creation.extract: extract $builddir/step_8-creation.tar.gz
build $builddir/step_9-creation.tar.xz: create | $minitar $builddir/step_0-generate_input
  args = $input --strip 1
build $builddir/step_9-creation.test: test $builddir/step_9-creation.tar.xz
build $builddir/step_9-creation.tartest: tartest $builddir/step_9-creation.tar.xz
build $builddir/step_9-creation.extract: extract $builddir/step_9-creation.tar.xz
build $builddir/step_10-creation.tar: create | $minitar $builddir/step_0-generate_input
  args = $input/empty --strip 1
build $builddir/step_10-creation.test: test $builddir/step_10-creation.tar
build $builddir/step_10-creation.tartest: tartest $builddir/step_10-creation.tar
build $builddir/step_10-creation.extract: extract $builddir/step_10-creation.tar
build $builddir/step_11-creation.tar: create | $minitar $builddir/step_0-generate_input
  args = $input/empty --strip 2
build $builddir/step_11-creation.test: test $builddir/step_11-creation.tar
build $builddir/step_11-creation.tartest: tartest $builddir/step_11-creation.tar
build $builddir/step_11-creation.extract: extract $builddir/step_11-creation.tar
build $builddir/step_12-creation.tar: create | $minitar $builddir/step_0-generate_input
  args = $input/empty --strip 3
build $builddir/step_12-creation.test: test $builddir/step_12-creation.tar
build $builddir/step_12-creation.tartest: tartest $builddir/step_12-creation.tar
build $builddir/step_12-creation.extract: extract $builddir/step_12-creation.tar

######################################################################
# Regenerate build.ninja when build.lua changes
######################################################################

rule bang
  command = bang $in -o $out
  generator = true

build build.ninja: bang build.lua
